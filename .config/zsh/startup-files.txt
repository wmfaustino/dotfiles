http://zsh.sourceforge.net/Intro/intro_3.html

There are five startup files that zsh will read commands from:

$ZDOTDIR/.zshenv
$ZDOTDIR/.zprofile
$ZDOTDIR/.zshrc
$ZDOTDIR/.zlogin
$ZDOTDIR/.zlogout
If ZDOTDIR is not set, then the value of HOME is used; this is the usual case.

`.zshenv' is sourced on all invocations of the shell, unless the -f option is set. It should contain commands to set the command search path, plus other important environment variables. `.zshenv' should not contain commands that produce output or assume the shell is attached to a tty.

`.zshrc' is sourced in interactive shells. It should contain commands to set up aliases, functions, options, key bindings, etc.

`.zlogin' is sourced in login shells. It should contain commands that should be executed only in login shells. `.zlogout' is sourced when login shells exit. `.zprofile' is similar to `.zlogin', except that it is sourced before `.zshrc'. `.zprofile' is meant as an alternative to `.zlogin' for ksh fans; the two are not intended to be used together, although this could certainly be done if desired. `.zlogin' is not the place for alias definitions, options, environment variable settings, etc.; as a general rule, it should not change the shell environment at all. Rather, it should be used to set the terminal type and run a series of external commands (fortune, msgs, etc).

------------------------------------
https://gist.github.com/pbrisbin/45654dc74787c18e858c

Default behavior dictates the following order for ZSH startup files:

/etc/zshenv
~/.zshenv
/etc/zprofile (if login shell)
~/.zprofile (if login shell)
/etc/zshrc (if interactive)
~/.zshrc (if interactive)
/etc/zlogin (if login shell)
~/.zlogin (if login shell)
Notes:

zshenv is the place to set environment variables
zshrc is the place for aliases, functions etc
Setting environment variables in zshenv means that they'll be present for non-interactive uses (think cron commands). This is what you want.

At least Debian/Gentoo/Arch ship an /etc/zprofile which sets (not adds to, sets) a value for $PATH. Because this file is sourced after ~/.zshenv, any value you may have set there is overridden.

Possible solutions:

Move the system /etc/zprofile to /etc/zshenv
Set your path in ~/.zprofile, not ~/.zshenv
Neither are great.

Moving /etc/zprofile to /etc/zshenv means whatever commands are there are now invoked for every shell (rather than once at login). This is wasteful, there's no need to (re)set your locale in every shell every time.

Setting environment variables in zprofile means they'll be set once (on login) and inherited by all shells invoked directly or indirectly. This mostly works. The variables won't be present for (e.g.) cron commands and any exports must be duplicated in your crontab.

References:

ZSH Startup/Shutdown Files: http://zsh.sourceforge.net/Doc/Release/Files.html
Arch bug: https://bugs.archlinux.org/task/35966
Gentoo bug: https://bugs.gentoo.org/show_bug.cgi?id=19924

---------------------------------------------------------

https://unix.stackexchange.com/questions/71253/what-should-shouldnt-go-in-zshenv-zshrc-zlogin-zprofile-zlogout

Here is a non-exclusive list of what each file tends to contain:

Since .zshenv is always sourced, it often contains exported variables that should be available to other programs. For example, $PATH, $EDITOR, and $PAGER are often set in .zshenv. Also, you can set $ZDOTDIR in .zshenv to specify an alternative location for the rest of your zsh configuration.
.zprofile is basically the same as .zlogin except that it's sourced before .zshrc while .zlogin is sourced after .zshrc. According to the zsh documentation, ".zprofile is meant as an alternative to .zlogin for ksh fans; the two are not intended to be used together, although this could certainly be done if desired."
.zshrc is for interactive shell configuration. You set options for the interactive shell there with the setopt and unsetopt commands. You can also load shell modules, set your history options, change your prompt, set up zle and completion, et cetera. You also set any variables that are only used in the interactive shell (e.g. $LS_COLORS).
.zlogin is sourced on the start of a login shell but after .zshrc if the shell is also interactive. This file is often used to start X using startx. Some systems start X on boot, so this file is not always very useful.
.zlogout is sometimes used to clear and reset the terminal. It is called when exiting, not when opening.

You should go through the configuration files of random Github users to get a better idea of what each file should contain.

---------------

Here a list of what each file should/shouldn't contain, in my opinion:

.zshenv
[Read every time]

This file is always sourced, so it should set environment variables which need to be updated frequently. PATH (or its associated counterpart path) is a good example because you probably don't want to restart your whole session to make it update. By setting it in that file, reopening a terminal emulator will start a new Zsh instance with the PATH value updated.

But be aware that this file is read even when Zsh is launched to run a single command (with the -c option), even by another tool like make. You should be very careful to not modify the default behavior of standard commands because it may break some tools (by setting aliases for example).

.zprofile
[Read at login]

I personally treat that file like .zshenv but for commands and variables which should be set once or which don't need to be updated frequently:

environment variables to configure tools (flags for compilation, data folder location, etc.)
configuration which execute commands (like SCONSFLAGS="--jobs=$(( $(nproc) - 1 ))") as it may take some time to execute.
If you modify this file, you can apply the configuration updates by running a login shell:

exec zsh --login
.zshrc
[Read when interactive]

I put here everything needed only for interactive usage:

prompt,
command completion,
command correction,
command suggestion,
command highlighting,
output coloring,
aliases,
key bindings,
commands history management,
other miscellaneous interactive tools (auto_cd, manydots-magic)...
.zlogin
[Read at login]

This file is like .zprofile, but is read after .zshrc. You can consider the shell to be fully set up at .zlogin execution time

So, I use it to launch external commands which do not modify shell behaviors (e.g. a login manager).

.zlogout
[Read at logout][Within login shell]

Here, you can clear your terminal or any other resource which was setup at login.

How I choose where to put a setting
if it is needed by a command run non-interactively: .zshenv
if it should be updated on each new shell: .zshenv
if it runs a command which may take some time to complete: .zprofile
if it is related to interactive usage: .zshrc
if it is a command to be run when the shell is fully setup: .zlogin
if it releases a resource acquired at login: .zlogout
